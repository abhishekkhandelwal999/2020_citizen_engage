{"ast":null,"code":"var _jsxFileName = \"/Users/khandelwal_abhishek/gnits/2020_citizen_engage-master/UI/src/components/admin/viewComplaints.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport './view.css';\nimport './adminhome.css';\nimport Nav from './nav.js';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table'; // import img from '../images/userlogin.jpeg';\n// import UserProfile from '../User/UserProfile';\n// import {createBrowserHistory} from 'history';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nvar body;\nconst Status = {\n  'Pending': 'Pending',\n  'Closed': 'Closed'\n};\n\nfunction enumFormatter(cell, row, enumObject) {\n  //window.location.reload(false);\n  return enumObject[cell];\n}\n\nclass viewComplaints extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      complaints: []\n    };\n  }\n\n  indexN(cell, row, enumObject, index) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, index + 1);\n  }\n\n  componentDidMount() {\n    const url = \"http://localhost:9000/getComplaints\";\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Access-Control-Allow-origin', url);\n    headers.append('Access-Control-Allow-Credentials', 'true');\n    headers.append('POST', 'GET');\n    fetch(url, {\n      headers: headers,\n      method: 'GET',\n      body: JSON.stringify(body)\n    }).then(response => {\n      if (response.ok) {\n        // UserProfile.setEmail(this.state.email);\n        response.json().then(res => {\n          console.log(res);\n          this.setState({\n            complaints: res\n          });\n        });\n      } else if (!response.ok) {\n        console.log(\"Wrong email or password\");\n        alert(\"No data\");\n      }\n    });\n  }\n\n  expandComponent(row) {\n    var createdimg = \"/images/\" + row.CreatedImage;\n    var closedtime;\n    var closedimg;\n    var image;\n\n    if (row.Status === \"Pending\") {\n      closedimg = row.ClosedImage;\n      closedtime = \"Not Yet Closed\";\n      image = React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\",\n        onClick: event => {\n          sessionStorage.setItem(\"Cid\", row.Cid);\n          sessionStorage.setItem(\"UserMail\", row.Email);\n          sessionStorage.setItem(\"MailLocation\", row.Location);\n          sessionStorage.setItem(\"MailCategory\", row.Category);\n          sessionStorage.setItem(\"MailName\", row.Name);\n          window.location.href = \"/viewandclose\";\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Take Action\")));\n    } else {\n      var img = \"/images/\" + row.ClosedImage;\n      closedimg = React.createElement(\"img\", {\n        src: img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n      closedtime = row.ClosedAt;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Container, {\n      border: \"5px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Cid : \", row.Cid), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Created Time : \", row.CreatedAt), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Closed Time : \", closedtime)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Problem Image : \", React.createElement(\"img\", {\n      src: createdimg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Solved Image :\", closedimg)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Problem Description:\", row.CreatedDescription), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Solution Description:\", row.ClosedDescription)), image));\n  }\n\n  isExpandableRow(row) {\n    return true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Complaints\"))), React.createElement(BootstrapTable, {\n      data: this.state.complaints,\n      expandComponent: this.expandComponent,\n      expandableRow: this.isExpandableRow,\n      striped: true,\n      hover: true,\n      condensed: true,\n      pagination: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(TableHeaderColumn, {\n      width: \"70\",\n      dataField: \"any\",\n      dataFormat: this.indexN,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"S.No\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Cid\",\n      isKey: true,\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"CID\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"EMAIL\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"CATEGORY\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"LOCATION\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Status\",\n      filterFormatted: true,\n      dataFormat: enumFormatter,\n      formatExtraData: Status,\n      filter: {\n        type: 'SelectFilter',\n        options: Status\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"STATUS\")))));\n  }\n\n}\n\nexport default withRouter(viewComplaints);","map":{"version":3,"sources":["/Users/khandelwal_abhishek/gnits/2020_citizen_engage-master/UI/src/components/admin/viewComplaints.js"],"names":["React","Component","withRouter","Nav","BootstrapTable","TableHeaderColumn","Container","Row","Col","body","Status","enumFormatter","cell","row","enumObject","viewComplaints","constructor","props","state","complaints","indexN","index","componentDidMount","url","headers","Headers","append","fetch","method","JSON","stringify","then","response","ok","json","res","console","log","setState","alert","expandComponent","createdimg","CreatedImage","closedtime","closedimg","image","ClosedImage","event","sessionStorage","setItem","Cid","Email","Location","Category","Name","window","location","href","img","ClosedAt","CreatedAt","CreatedDescription","ClosedDescription","isExpandableRow","render","type","options"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {  withRouter} from \"react-router-dom\";\nimport './view.css';\nimport './adminhome.css'\nimport Nav  from './nav.js';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\n// import img from '../images/userlogin.jpeg';\n// import UserProfile from '../User/UserProfile';\n// import {createBrowserHistory} from 'history';\nimport {Container,Row,Col} from 'react-bootstrap';\n\nvar body;\n\nconst Status = {\n  'Pending': 'Pending',\n  'Closed': 'Closed',\n  };\n  function enumFormatter(cell, row, enumObject) {\n    //window.location.reload(false);\n  return enumObject[cell];\n  }\n\nclass viewComplaints extends Component{\n  constructor(props) {\n    super(props);\n    this.state={\n      complaints :[]\n    }\n    \n  }\n  indexN(cell, row, enumObject, index) {\n    return (<div>{index+1}</div>) \n}\n\n  componentDidMount() {\n   \n        const url = \"http://localhost:9000/getComplaints\";\n          let headers = new Headers();\n      \n          headers.append('Content-Type','application/json');\n          headers.append('Accept','application/json');\n      \n          headers.append('Access-Control-Allow-origin',url);\n          headers.append('Access-Control-Allow-Credentials','true');\n      \n          headers.append('POST','GET');\n      \n          fetch(url, {\n            headers:headers,\n            method: 'GET',\n            body: JSON.stringify(body)\n          })\n          .then(response => {if(response.ok){\n            // UserProfile.setEmail(this.state.email);\n            response.json()\n            .then(res=> {\n              console.log(res)\n              this.setState({\n                  complaints : res\n              })          \n            })\n          }\n          else if(!response.ok){\n            console.log(\"Wrong email or password\")\n            alert(\"No data\")\n          }\n          })\n   \n    } \n\n   \n\n    expandComponent(row) {\n      var createdimg=\"/images/\"+row.CreatedImage;\n      var closedtime;\n      var closedimg;\n      var image;\n      if(row.Status === \"Pending\"){\n        closedimg = row.ClosedImage;\n        closedtime = \"Not Yet Closed\";\n       image = <Row>\n        <Col>\n        <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={(event) => \n          {sessionStorage.setItem(\"Cid\",row.Cid)\n          sessionStorage.setItem(\"UserMail\",row.Email)\n          sessionStorage.setItem(\"MailLocation\",row.Location)\n          sessionStorage.setItem(\"MailCategory\",row.Category)\n          sessionStorage.setItem(\"MailName\",row.Name)\n          window.location.href= \"/viewandclose\"}}>Take Action</button></Col>\n</Row>\n      }\n      else{\n        var img = \"/images/\"+row.ClosedImage;\n        closedimg=<img src={img}/>;\n        closedtime = row.ClosedAt;\n      }\n      return (\n        <div>\n          <Container border=\"5px\">\n            <Row>\n              <Col>Cid : {row.Cid}</Col>\n              <Col>Created Time : {row.CreatedAt}</Col>\n              <Col>Closed Time : {closedtime}</Col>\n            </Row>\n           <Row>\n              <Col>Problem Image : <img src={createdimg}/></Col>\n      <Col>Solved Image :{closedimg}</Col>\n          </Row>\n          <Row>\n      <Col>Problem Description:{row.CreatedDescription}</Col>\n      <Col>Solution Description:{row.ClosedDescription}</Col>\n      </Row>{image}\n</Container>\n        </div>\n      );\n    }\n\n    isExpandableRow(row) {    \n        return true;      \n    }\n    \n\n    render() {\n       \n        return (\n        <div>\n            <div className=\"wrapper\">\n            <Nav/>\n            <br></br><br/>\n            <br/>\n                    <div className=\"main_content\">\n                        <div className=\"header\"><h2><u>Complaints</u></h2></div>\n          <BootstrapTable data={ this.state.complaints } expandComponent={ this.expandComponent } expandableRow={ this.isExpandableRow } striped hover condensed pagination>\n          <TableHeaderColumn width='70' dataField=\"any\" dataFormat={this.indexN}>S.No</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='Cid' isKey hidden>CID</TableHeaderColumn>\n          <TableHeaderColumn  width='150' dataField='Email'>EMAIL</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='Category'>CATEGORY</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='Location'>LOCATION</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='Status' filterFormatted dataFormat={ enumFormatter }  formatExtraData={ Status } filter={ { type: 'SelectFilter', options: Status } }>STATUS</TableHeaderColumn>\n           \n      </BootstrapTable>\n            \n          </div></div></div>\n        );\n    }\n}\nexport default withRouter(viewComplaints);"]},"metadata":{},"sourceType":"module"}