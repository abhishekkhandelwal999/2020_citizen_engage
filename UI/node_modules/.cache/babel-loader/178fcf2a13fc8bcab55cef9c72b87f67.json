{"ast":null,"code":"var _jsxFileName = \"/Users/khandelwal_abhishek/gnits/2020_citizen_engage-master/UI/src/components/User/userMarker.js\";\nimport React, { Component } from \"react\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\"; //import * as parkData from \"./data/skateboard-parks.json\";\n\nimport \"./marker.css\";\nvar body;\nexport const icon1 = new Icon({\n  iconUrl: \"garbage.svg\",\n  iconSize: [25, 25]\n});\nexport const icon2 = new Icon({\n  iconUrl: \"road.svg\",\n  iconSize: [25, 25]\n});\nexport const icon3 = new Icon({\n  iconUrl: \"sewage.svg\",\n  iconSize: [25, 25]\n});\nexport const icon4 = new Icon({\n  iconUrl: \"Electric.svg\",\n  iconSize: [25, 25]\n}); // const [activePark, setActivePark] = React.useState(null);\n\nexport default class userMarker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapData: []\n    };\n  }\n\n  arraytoJson(valuearrs) {\n    var arr = [];\n\n    for (var i = 0; i < valuearrs.length; i++) {\n      arr[i] = {};\n      arr[i].Cid = valuearrs[i][0];\n      arr[i].Category = valuearrs[i][1];\n      arr[i].Latitude = valuearrs[i][2];\n      arr[i].Longitude = valuearrs[i][3];\n      arr[i].Description = valuearrs[i][4];\n    }\n\n    console.log(arr);\n    return arr;\n  }\n\n  componentDidMount() {\n    body = {\n      Id: sessionStorage.getItem(\"Identity\")\n    };\n    const url = \"http://localhost:9000/userIconMap\";\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Access-Control-Allow-origin', url);\n    headers.append('Access-Control-Allow-Credentials', 'true');\n    headers.append('POST', 'GET');\n    fetch(url, {\n      headers: headers,\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(response => {\n      if (response.ok) {\n        // UserProfile.setEmail(this.state.email);\n        response.json().then(res => {\n          console.log(\"Response:\" + res);\n          this.setState({\n            mapData: this.arraytoJson(res)\n          });\n        });\n      }\n    });\n    console.log(\"Body\" + this.state.mapData);\n  } // CallIcon(){\n  //   if(loc.Category == \"Garbage\")\n  //       return icon1;\n  //   else\n  //       return icon2;\n  // }\n\n\n  CallIcon(loc) {\n    if (loc.Category == \"Garbage\") {\n      return React.createElement(Marker, {\n        key: loc.Cid,\n        position: [loc.Latitude, loc.Longitude] // onClick={() => {this.setActiveLocation(loc);}}\n        ,\n        icon: icon1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Category : \", loc.Category, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), \"Description : \", loc.Description));\n    } else if (loc.Category == \"Road\") {\n      return React.createElement(Marker, {\n        key: loc.Cid,\n        position: [loc.Latitude, loc.Longitude] // onClick={() => {this.setActiveLocation(loc);}}\n        ,\n        icon: icon2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Category : \", loc.Category, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), \"Description : \", loc.Description));\n    } else if (loc.Category == \"Water\") {\n      return React.createElement(Marker, {\n        key: loc.Cid,\n        position: [loc.Latitude, loc.Longitude] // onClick={() => {this.setActiveLocation(loc);}}\n        ,\n        icon: icon3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Category : \", loc.Category, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), \"Description : \", loc.Description));\n    } else if (loc.Category == \"Electricity\") {\n      return React.createElement(Marker, {\n        key: loc.Cid,\n        position: [loc.Latitude, loc.Longitude] // onClick={() => {this.setActiveLocation(loc);}}\n        ,\n        icon: icon4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Category : \", loc.Category, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), \"Description : \", loc.Description));\n    }\n  } // setActiveLocation(loc){\n  //   return( <Popup>\n  //     <div>\n  //   <h2>{loc.Cid}</h2>\n  //   <p>{loc.Category}</p>\n  //   </div>\n  //   </Popup>)\n  // }\n\n\n  render() {\n    var mapIcon;\n    return React.createElement(Map, {\n      center: [17.437462, 78.448248],\n      zoom: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), this.state.mapData.map(loc => this.CallIcon(loc)));\n  }\n\n}","map":{"version":3,"sources":["/Users/khandelwal_abhishek/gnits/2020_citizen_engage-master/UI/src/components/User/userMarker.js"],"names":["React","Component","MapContainer","Marker","Popup","TileLayer","Icon","body","icon1","iconUrl","iconSize","icon2","icon3","icon4","userMarker","constructor","props","state","mapData","arraytoJson","valuearrs","arr","i","length","Cid","Category","Latitude","Longitude","Description","console","log","componentDidMount","Id","sessionStorage","getItem","url","headers","Headers","append","fetch","method","JSON","stringify","then","response","ok","json","res","setState","CallIcon","loc","render","mapIcon","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\n//import * as parkData from \"./data/skateboard-parks.json\";\nimport \"./marker.css\";\n\nvar body;\n\nexport const icon1 = new Icon({\n  iconUrl: \"garbage.svg\",\n  iconSize: [25, 25]\n});\n\nexport const icon2 = new Icon({\n  iconUrl: \"road.svg\",\n  iconSize: [25, 25]\n});\n\nexport const icon3 = new Icon({\n  iconUrl: \"sewage.svg\",\n  iconSize: [25, 25]\n});\n\nexport const icon4 = new Icon({\n  iconUrl: \"Electric.svg\",\n  iconSize: [25, 25]\n});\n// const [activePark, setActivePark] = React.useState(null);\nexport default class userMarker extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      mapData :[]\n    }\n}\n\narraytoJson(valuearrs) {\n  var arr=[]\n    for (var i = 0; i < valuearrs.length; i++) {\n        arr[i]={};\n        arr[i].Cid = valuearrs[i][0];\n        arr[i].Category = valuearrs[i][1];\n        arr[i].Latitude = valuearrs[i][2];\n        arr[i].Longitude = valuearrs[i][3];\n        arr[i].Description = valuearrs[i][4];\n  }\n  console.log(arr);\n    return arr;\n}\n  \n\ncomponentDidMount(){\n    \n  body = {\n    Id: sessionStorage.getItem(\"Identity\"),\n  }\n      const url = \"http://localhost:9000/userIconMap\";\n        let headers = new Headers();\n    \n        headers.append('Content-Type','application/json');\n        headers.append('Accept','application/json');\n    \n        headers.append('Access-Control-Allow-origin',url);\n        headers.append('Access-Control-Allow-Credentials','true');\n    \n        headers.append('POST','GET');\n    \n        fetch(url, {\n          headers:headers,\n          method: 'POST',\n          body: JSON.stringify(body)\n        })\n        .then(response => {if(response.ok){\n          // UserProfile.setEmail(this.state.email);\n          response.json()\n          .then(res=> {\n            console.log(\"Response:\"+res)\n            this.setState({\n                mapData : this.arraytoJson(res)\n            })          \n          })\n        }\n        \n        })\n        console.log(\"Body\"+this.state.mapData);\n           \n  } \n// CallIcon(){\n//   if(loc.Category == \"Garbage\")\n//       return icon1;\n//   else\n//       return icon2;\n// }\n  CallIcon(loc){\n    if(loc.Category == \"Garbage\"){\n        return  (<Marker\n        key={loc.Cid}\n        position={[loc.Latitude,loc.Longitude]}   \n        // onClick={() => {this.setActiveLocation(loc);}}\n        icon={icon1}\n      >\n      <Popup>\n      Category : {loc.Category} <br/>\n      Description : {loc.Description}\n      </Popup>\n      </Marker>\n      );\n    }\n    else if(loc.Category == \"Road\"){\n      return  (<Marker\n      key={loc.Cid}\n      position={[loc.Latitude,loc.Longitude]}   \n      // onClick={() => {this.setActiveLocation(loc);}}\n      icon={icon2}\n    >\n   <Popup>\n      Category : {loc.Category} <br/>\n      Description : {loc.Description}\n    </Popup>\n      </Marker>\n    );\n  }\n  else if(loc.Category == \"Water\"){\n    return  (<Marker\n    key={loc.Cid}\n    position={[loc.Latitude,loc.Longitude]}   \n    // onClick={() => {this.setActiveLocation(loc);}}\n    icon={icon3}\n    >\n   <Popup>\n      Category : {loc.Category} <br/>\n      Description : {loc.Description}\n    </Popup>\n       </Marker>\n  \n  );\n}\n    else if(loc.Category == \"Electricity\"){\n      return (<Marker\n      key={loc.Cid}\n      position={[loc.Latitude,loc.Longitude]}   \n      // onClick={() => {this.setActiveLocation(loc);}}\n      icon={icon4}\n      >\n     <Popup>\n      Category : {loc.Category} <br/>\n      Description : {loc.Description}\n    </Popup>\n         </Marker>\n    );\n    }\n\n  }\n// setActiveLocation(loc){\n//   return( <Popup>\n//     <div>\n//   <h2>{loc.Cid}</h2>\n//   <p>{loc.Category}</p>\n//   </div>\n//   </Popup>)\n \n// }\n\nrender(){\n  var mapIcon;\n  \n  return (\n    <Map center={[17.437462, 78.448248]} zoom={13}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n\n      {/* {this.state.mapData.map(loc => (\n        mapIcon = CallIcon(loc)\n        <Marker\n          key={loc.Cid}\n          position={[loc.Latitude,loc.Longitude]}   \n          // onClick={() => {setActivePark(loc);}}\n          icon={mapIcon}\n        />\n      ))} */}\n      {this.state.mapData.map(loc => (\n        this.CallIcon(loc)\n      ))}\n\n      {/* {activePark && (\n        <Popup\n          position={[\n            activePark.geometry.coordinates[1],\n            activePark.geometry.coordinates[0]\n          ]}\n          onClose={() => {\n            setActivePark(null);\n          }}\n        >\n          <div>\n            <h2>{activePark.properties.NAME}</h2>\n            <p>{activePark.properties.DESCRIPTIO}</p>\n          </div>\n        </Popup>\n      )} */}\n    </Map>\n  );\n\n}\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}