{"ast":null,"code":"var _jsxFileName = \"/Users/khandelwal_abhishek/gnits/2020_citizen_engage-master/UI/src/components/admin/topRankedList.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport './adminhome.css';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport Nav from './nav.js';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nvar body;\nconst Status = {\n  'Pending': 'Pending',\n  'Closed': 'Closed'\n};\n\nfunction enumFormatter(cell, row, enumObject) {\n  //window.location.reload(false);\n  return enumObject[cell];\n}\n\nclass topRankedList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toprankedlist: []\n    };\n  }\n\n  indexN(cell, row, enumObject, index) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, index + 1);\n  }\n\n  componentDidMount() {\n    body = {\n      Location: sessionStorage.getItem(\"Location\"),\n      Category: sessionStorage.getItem(\"Category\")\n    };\n    console.log(body);\n    const url = \"http://localhost:9000/topRankedList\";\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Access-Control-Allow-origin', url);\n    headers.append('Access-Control-Allow-Credentials', 'true');\n    headers.append('POST', 'GET');\n    fetch(url, {\n      headers: headers,\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(response => {\n      if (response.ok) {\n        // UserProfile.setEmail(this.state.email);\n        response.json().then(res => {\n          console.log(res);\n          this.setState({\n            toprankedlist: res\n          });\n        });\n      } else if (!response.ok) {\n        console.log(\"Response not ok\");\n        alert(\"No details to display\");\n      }\n    }); //   .then(response => {\n    //       console.log(response.json())\n    //   })\n\n    {\n      /*}.catch((error)=> {console.log(\"can't access\" + url + \"response. \" +error )},\n       alert(\"Wrong email or password\"))*/\n    }\n  }\n\n  expandComponent(row) {\n    var createdimg = \"/images/\" + row.CreatedImage;\n    var closedtime;\n    var closedimg;\n    var image;\n\n    if (row.Status === \"Pending\") {\n      closedimg = row.ClosedImage;\n      closedtime = \"Not Yet Closed\";\n      image = React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\",\n        onClick: event => {\n          sessionStorage.setItem(\"Cid\", row.Cid);\n          sessionStorage.setItem(\"UserMail\", row.Email);\n          sessionStorage.setItem(\"MailLocation\", row.Location);\n          sessionStorage.setItem(\"MailCategory\", row.Category);\n          sessionStorage.setItem(\"MailName\", row.Name);\n          window.location.href = \"/viewandclose\";\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Take Action\")));\n    } else {\n      var img = \"/images/\" + row.ClosedImage;\n      closedimg = React.createElement(\"img\", {\n        src: img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n      closedtime = row.ClosedAt;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Container, {\n      border: \"5px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Cid : \", row.Cid), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Created Time : \", row.CreatedAt), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Closed Time : \", closedtime)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Problem Image : \", React.createElement(\"img\", {\n      src: createdimg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Solved Image :\", closedimg)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Problem Description:\", row.CreatedDescription), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Solution Description:\", row.ClosedDescription)), image));\n  }\n\n  isExpandableRow(row) {\n    return true;\n  }\n\n  handleSubmit() {\n    window.location.href = \"/topranked\";\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Categorised Complaints\"))), React.createElement(BootstrapTable, {\n      data: this.state.toprankedlist,\n      expandComponent: this.expandComponent,\n      expandableRow: this.isExpandableRow,\n      striped: true,\n      hover: true,\n      condensed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(TableHeaderColumn, {\n      width: \"70\",\n      dataField: \"any\",\n      dataFormat: this.indexN,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"S.No\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Cid\",\n      isKey: true,\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"CID\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"EMAIL\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"CATEGORY\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"LOCATION\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Status\",\n      filterFormatted: true,\n      dataFormat: enumFormatter,\n      formatExtraData: Status,\n      filter: {\n        type: 'SelectFilter',\n        options: Status\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"STATUS\")), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      variant: \"secondary\",\n      size: \"lg\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Back\")))));\n  }\n\n}\n\nexport default withRouter(topRankedList);","map":{"version":3,"sources":["/Users/khandelwal_abhishek/gnits/2020_citizen_engage-master/UI/src/components/admin/topRankedList.js"],"names":["React","Component","withRouter","BootstrapTable","TableHeaderColumn","Nav","Container","Row","Col","Button","body","Status","enumFormatter","cell","row","enumObject","topRankedList","constructor","props","state","toprankedlist","indexN","index","componentDidMount","Location","sessionStorage","getItem","Category","console","log","url","headers","Headers","append","fetch","method","JSON","stringify","then","response","ok","json","res","setState","alert","expandComponent","createdimg","CreatedImage","closedtime","closedimg","image","ClosedImage","event","setItem","Cid","Email","Name","window","location","href","img","ClosedAt","CreatedAt","CreatedDescription","ClosedDescription","isExpandableRow","handleSubmit","render","type","options"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {  withRouter} from \"react-router-dom\";\nimport './adminhome.css';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport Nav  from './nav.js';\nimport {Container,Row,Col,Button} from 'react-bootstrap';\n\n\nvar body;\nconst Status = {\n    'Pending': 'Pending',\n    'Closed': 'Closed',\n    };\n    function enumFormatter(cell, row, enumObject) {\n      //window.location.reload(false);\n    return enumObject[cell];\n    }\n\nclass topRankedList extends Component{\n  constructor(props) {\n    super(props);\n    this.state={\n      toprankedlist :[]\n    }\n    \n  }\n\n  indexN(cell, row, enumObject, index) {\n    return (<div>{index+1}</div>) \n} \n\n  componentDidMount() {\n    body = {\n        Location : sessionStorage.getItem(\"Location\"),\n        Category : sessionStorage.getItem(\"Category\")\n      }\n      console.log(body);\n        const url = \"http://localhost:9000/topRankedList\";\n          let headers = new Headers();\n      \n          headers.append('Content-Type','application/json');\n          headers.append('Accept','application/json');\n      \n          headers.append('Access-Control-Allow-origin',url);\n          headers.append('Access-Control-Allow-Credentials','true');\n      \n          headers.append('POST','GET');\n      \n          fetch(url, {\n            headers:headers,\n            method: 'POST',\n            body: JSON.stringify(body)\n          })\n          .then(response => {if(response.ok){\n            // UserProfile.setEmail(this.state.email);\n            response.json()\n            .then(res=> {\n              console.log(res)\n              this.setState({\n                  toprankedlist : res\n              })          \n            })\n          }\n          else if(!response.ok){\n            console.log(\"Response not ok\")\n            alert(\"No details to display\")\n          }\n          })\n    \n        //   .then(response => {\n        //       console.log(response.json())\n        //   })\n          {/*}.catch((error)=> {console.log(\"can't access\" + url + \"response. \" +error )},\n            alert(\"Wrong email or password\"))*/}\n\n          \n      \n    } \n\n    expandComponent(row) {\n        var createdimg=\"/images/\"+row.CreatedImage;\n        var closedtime;\n        var closedimg;\n        var image;\n        if(row.Status === \"Pending\"){\n          closedimg = row.ClosedImage;\n          closedtime = \"Not Yet Closed\";\n         image = <Row>\n           <Col>\n        <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={(event) => \n          {sessionStorage.setItem(\"Cid\",row.Cid)\n          sessionStorage.setItem(\"UserMail\",row.Email)\n          sessionStorage.setItem(\"MailLocation\",row.Location)\n          sessionStorage.setItem(\"MailCategory\",row.Category)\n          sessionStorage.setItem(\"MailName\",row.Name)\n          window.location.href= \"/viewandclose\"}}>Take Action</button></Col>\n  </Row>\n        }\n        else{\n          var img = \"/images/\"+row.ClosedImage;\n          closedimg=<img src={img}/>;\n          closedtime = row.ClosedAt;\n        }\n        return (\n          <div>\n            <Container border=\"5px\">\n              <Row>\n                <Col>Cid : {row.Cid}</Col>\n                <Col>Created Time : {row.CreatedAt}</Col>\n                <Col>Closed Time : {closedtime}</Col>\n              </Row>\n             <Row>\n                <Col>Problem Image : <img src={createdimg}/></Col>\n        <Col>Solved Image :{closedimg}</Col>\n            </Row>\n            <Row>\n        <Col>Problem Description:{row.CreatedDescription}</Col>\n        <Col>Solution Description:{row.ClosedDescription}</Col>\n        </Row>{image}\n  </Container>\n          </div>\n        );\n      }\n  \n      isExpandableRow(row) {    \n          return true;      \n      }\n      \n    handleSubmit(){\n        window.location.href=\"/topranked\";\n    }\n\n    render() {\n        \n      return (\n        <div>\n            <div className=\"wrapper\">\n            <Nav/>\n            <br></br><br/>\n            <br/>\n                    <div className=\"main_content\">\n                        <div className=\"header\"><h2><u>Categorised Complaints</u></h2></div>\n          <BootstrapTable data={ this.state.toprankedlist }  expandComponent={ this.expandComponent } expandableRow={ this.isExpandableRow } striped hover condensed >\n          <TableHeaderColumn  width='70' dataField=\"any\" dataFormat={this.indexN}>S.No</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='Cid' isKey hidden>CID</TableHeaderColumn>\n          <TableHeaderColumn  width='150' dataField='Email'>EMAIL</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='Category'>CATEGORY</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='Location'>LOCATION</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='Status' filterFormatted dataFormat={ enumFormatter }  formatExtraData={ Status } filter={ { type: 'SelectFilter', options: Status } }>STATUS</TableHeaderColumn>\n          \n      </BootstrapTable>\n      <center><Button type=\"submit\" variant=\"secondary\" size=\"lg\" onClick={this.handleSubmit}>Back</Button></center>    \n          </div></div></div>\n        );\n    }\n}\nexport default withRouter(topRankedList);"]},"metadata":{},"sourceType":"module"}