{"ast":null,"code":"var _jsxFileName = \"/Users/khandelwal_abhishek/gnits/2020_citizen_engage/UI/src/components/Authority/Pending.js\";\nimport React, { Component } from \"react\";\nimport { useHistory, withRouter, Link } from \"react-router-dom\";\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nfunction CurDateTime() {\n  var tempDate = new Date();\n  var date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds();\n  const currDate = \"Current Date= \" + date;\n  console.log(\"tempdate\", tempDate);\n  console.log(currDate);\n  return (// <p>{currDate}</p>\n    date\n  );\n}\n\nvar print;\n\nfunction sendAlert(row) {\n  var EMAIL;\n\n  if (row.Category == \"Electricity\") {\n    //  EMAIL = \"meghana.honey44@gmail.com\"}\n    EMAIL = \"himajareddy2016@gmail.com\";\n  }\n\n  if (row.Category == \"Road\") {\n    EMAIL = \"himajareddy2016@gmail.com\";\n  }\n\n  if (row.Category == \"Water\") {\n    EMAIL = \"pavanisiddam2k@gmail.com\";\n  }\n\n  const templateId = 'template_NgHqYVXi';\n  const EMAILMESSAGE = \"The Complaint with Id:\" + row.Cid + \" is delayed by \" + print + \" Please Take immediate action.\";\n  sendFeedback(templateId, {\n    message_html: EMAILMESSAGE,\n    from_name: \"CITIZENS ENGAGE ADMIN\",\n    email: EMAIL\n  });\n  alert(\"Alert Send successfully\");\n}\n\nfunction sendFeedback(templateId, variables) {\n  window.emailjs.send('gmail', templateId, variables).then(res => {\n    console.log('Email successfully sent!');\n  }) // Handle errors here however you like, or use a React error boundary\n  .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err));\n}\n\nclass Pending extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      complaints: []\n    };\n  }\n\n  indexN(cell, row, enumObject, index) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, index + 1);\n  } // CellFormatter(cell,row){\n  //   var createdtime = row.CreatedAt;\n  //   var pdate = new Date();\n  //   var presenthours = pdate.getHours();\n  //   var total = createdtime.split(\" \",2);\n  //   var date = total[0].split(\"-\",3);\n  //   var years = date[0];\n  //   var months = date[1];\n  //   var day =  date[2];\n  //   var time = total[1].split(\":\",3)\n  //   var hour = time[1];\n  //   var diff = presenthours-hour;\n  //   console.log(\"difference in cekl\",diff);\n  //   return(\n  //   <div>\n  //     if(diff>3){\n  //       <h1 style=\"color:red\"> </h1>\n  //     }\n  //   </div>\n  //   )\n  // }\n\n\n  componentDidMount() {\n    var body = {\n      name: sessionStorage.getItem(\"cat\")\n    };\n    console.log(\"Body\" + body.name);\n    const url = \"http://localhost:9000/statusPendingComplaints\";\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Access-Control-Allow-origin', url);\n    headers.append('Access-Control-Allow-Credentials', 'true');\n    headers.append('POST', 'GET');\n    fetch(url, {\n      headers: headers,\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(response => {\n      console.log(response);\n\n      if (response.ok) {\n        // UserProfile.setEmail(this.state.email);\n        response.json().then(res => {\n          console.log(\"Response:\" + res);\n          console.log(\"complaints:\" + res.CreatedAt);\n          this.setState({\n            complaints: res\n          });\n        });\n      }\n    });\n  }\n\n  expandComponent(row) {\n    // var route= \"/viewandclose/\"+row.Cid;\n    var createdimg = \"/images/\" + row.CreatedImage;\n    var closedtime;\n    var closedimg;\n    var image;\n    var flag = 1; // var creat=row.CreatedAt;\n    // var diff=creat-CurDateTime()\n\n    var createdtime = row.CreatedAt;\n    var pdate = new Date();\n    var presenthours = pdate.getHours();\n    var presentMonth = pdate.getMonth() + 1;\n    var presentYear = pdate.getFullYear();\n    var presentDate = pdate.getDate();\n    var total = createdtime.split(\" \", 2);\n    var date = total[0].split(\"-\", 3);\n    var years = date[0];\n    var months = date[1];\n    var day = date[2];\n    var time = total[1].split(\":\", 3);\n    var hour = time[0];\n    var diffm = presentMonth - months;\n    var diffd = presentDate - day;\n    var diffh = presenthours - hour;\n    var diff = presenthours - hour;\n    console.log(\"diffmontg\", diffm);\n    console.log(\"diffhours\", diffh);\n    console.log(\"diffday\", diffd);\n\n    if (row.Category === 'Road') {\n      if (diffm > 1) {\n        flag = 0;\n        print = diffm + \" Months\";\n      } else if (diffd > 4) {\n        flag = 0;\n        print = diffd + \" Days\";\n      } else {\n        flag = 1;\n        print = diffh + \" Hours\";\n      }\n    }\n\n    if (row.Category === 'Electricity') {\n      if (diffm > 1) {\n        flag = 0;\n        print = diffm + \" Months\";\n      } else if (diffd >= 1) {\n        flag = 0;\n        print = diffd + \" Days\";\n      } else if (diffh > 3) {\n        flag = 0;\n        print = diffh + \" Hours\";\n      } else {\n        flag = 1;\n        print = diffh + \" Hours\";\n      }\n    } // if(creat-CurDateTime()>1)\n    //    diff='RedAlert';\n    //   else\n    //   diff='BlueAlert'\n    //console.log(\"difference\",diff);\n\n\n    if (row.Status == \"Pending\") {\n      closedimg = row.ClosedImage;\n      closedtime = \"Not Yet Closed\";\n\n      if (flag === 0) {\n        image = React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"It is Delayed by :\", print), React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: event => {\n            sendAlert(row);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, \"Send an Alert\")));\n      } else {\n        image = React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(Col, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, \"Diff is:\", print));\n      }\n    } else {\n      var img = \"/images/\" + row.ClosedImage;\n      closedimg = React.createElement(\"img\", {\n        src: img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      });\n      closedtime = row.ClosedAt;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Container, {\n      border: \"5px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Cid : \", row.Cid), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Created Time : \", row.CreatedAt)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Problem Image : \", React.createElement(\"img\", {\n      src: createdimg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Description:\", row.CreatedDescription)), image));\n  }\n\n  isExpandableRow(row) {\n    return true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Pending Complaints\"))), React.createElement(BootstrapTable, {\n      data: this.state.complaints,\n      expandComponent: this.expandComponent,\n      expandableRow: this.isExpandableRow,\n      striped: true,\n      hover: true,\n      condensed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(TableHeaderColumn, {\n      dataField: \"any\",\n      dataFormat: this.indexN,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"S.No\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Cid\",\n      isKey: true,\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"CID\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataformat: this.CellFormatter,\n      dataField: \"Category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"CATEGORY\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"CreatedImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"IMAGE\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"LOCATION\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"CreatedAt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"TIMESTAMP\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"CreatedDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"DESCRIPTION\"), React.createElement(TableHeaderColumn, {\n      width: \"150\",\n      dataField: \"Status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"STATUS\"))), React.createElement(\"button\", {\n      name: \"logout\",\n      onClick: event => {\n        window.location.href = \"/Authority\";\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Back\")));\n  }\n\n}\n\nexport default withRouter(Pending);","map":{"version":3,"sources":["/Users/khandelwal_abhishek/gnits/2020_citizen_engage/UI/src/components/Authority/Pending.js"],"names":["React","Component","useHistory","withRouter","Link","BootstrapTable","TableHeaderColumn","Container","Row","Col","CurDateTime","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","currDate","console","log","print","sendAlert","row","EMAIL","Category","templateId","EMAILMESSAGE","Cid","sendFeedback","message_html","from_name","email","alert","variables","window","emailjs","send","then","res","catch","err","error","Pending","constructor","props","state","complaints","indexN","cell","enumObject","index","componentDidMount","body","name","sessionStorage","getItem","url","headers","Headers","append","fetch","method","JSON","stringify","response","ok","json","CreatedAt","setState","expandComponent","createdimg","CreatedImage","closedtime","closedimg","image","flag","createdtime","pdate","presenthours","presentMonth","presentYear","presentDate","total","split","years","months","day","time","hour","diffm","diffd","diffh","diff","Status","ClosedImage","event","img","ClosedAt","CreatedDescription","isExpandableRow","render","CellFormatter","location","href"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAgCC,IAAhC,QAA4C,kBAA5C;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,uBAAhD;AACA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,GAAtB,QAAgC,iBAAhC;;AACA,SAASC,WAAT,GAAuB;AACrB,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,EAAf;AACD,MAAIC,IAAI,GAAGF,QAAQ,CAACG,WAAT,KAAyB,GAAzB,IAAgCH,QAAQ,CAACI,QAAT,KAAoB,CAApD,IAAyD,GAAzD,GAA+DJ,QAAQ,CAACK,OAAT,EAA/D,GAAmF,GAAnF,GAAwFL,QAAQ,CAACM,QAAT,EAAxF,GAA4G,GAA5G,GAAiHN,QAAQ,CAACO,UAAT,EAAjH,GAAuI,GAAvI,GAA4IP,QAAQ,CAACQ,UAAT,EAAvJ;AACC,QAAMC,QAAQ,GAAG,mBAAiBP,IAAlC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBX,QAAvB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SACE;AACAP,IAAAA;AAFF;AAID;;AACD,IAAIU,KAAJ;;AACA,SAASC,SAAT,CAAmBC,GAAnB,EACA;AAAG,MAAIC,KAAJ;;AACD,MAAGD,GAAG,CAACE,QAAJ,IAAc,aAAjB,EAA+B;AAC7B;AACAD,IAAAA,KAAK,GAAC,2BAAN;AAAkC;;AACpC,MAAGD,GAAG,CAACE,QAAJ,IAAc,MAAjB,EAAwB;AACvBD,IAAAA,KAAK,GAAC,2BAAN;AAAkC;;AAClC,MAAGD,GAAG,CAACE,QAAJ,IAAc,OAAjB,EACA;AACED,IAAAA,KAAK,GAAC,0BAAN;AACD;;AACA,QAAME,UAAU,GAAG,mBAAnB;AACA,QAAMC,YAAY,GAAE,2BAAyBJ,GAAG,CAACK,GAA7B,GAAiC,iBAAjC,GAAmDP,KAAnD,GAAyD,gCAA7E;AACAQ,EAAAA,YAAY,CAACH,UAAD,EAAa;AAACI,IAAAA,YAAY,EAAEH,YAAf;AAA6BI,IAAAA,SAAS,EAAE,uBAAxC;AAAiEC,IAAAA,KAAK,EAAER;AAAxE,GAAb,CAAZ;AACAS,EAAAA,KAAK,CAAC,yBAAD,CAAL;AACC;;AAEL,SAASJ,YAAT,CAAuBH,UAAvB,EAAmCQ,SAAnC,EAA8C;AAC5CC,EAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CACE,OADF,EACWX,UADX,EAEEQ,SAFF,EAGII,IAHJ,CAGSC,GAAG,IAAI;AACZpB,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,GALH,EAME;AANF,GAOGoB,KAPH,CAOSC,GAAG,IAAItB,OAAO,CAACuB,KAAR,CAAc,oEAAd,EAAoFD,GAApF,CAPhB;AAQC;;AAEH,MAAME,OAAN,SAAsB5C,SAAtB,CAA+B;AAC7B6C,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACTC,MAAAA,UAAU,EAAE;AADH,KAAX;AAGH;;AACDC,EAAAA,MAAM,CAACC,IAAD,EAAO1B,GAAP,EAAY2B,UAAZ,EAAwBC,KAAxB,EAA+B;AACnC,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,KAAK,GAAC,CAAZ,CAAR;AACD,GAV8B,CAW/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,iBAAiB,GAAE;AACjB,QAAIC,IAAI,GAAG;AACTC,MAAAA,IAAI,EAAEC,cAAc,CAACC,OAAf,CAAuB,KAAvB;AADG,KAAX;AAGArC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAOiC,IAAI,CAACC,IAAxB;AAEI,UAAMG,GAAG,GAAG,+CAAZ;AACE,QAAIC,OAAO,GAAG,IAAIC,OAAJ,EAAd;AAEAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA8B,kBAA9B;AACAF,IAAAA,OAAO,CAACE,MAAR,CAAe,QAAf,EAAwB,kBAAxB;AAEAF,IAAAA,OAAO,CAACE,MAAR,CAAe,6BAAf,EAA6CH,GAA7C;AACAC,IAAAA,OAAO,CAACE,MAAR,CAAe,kCAAf,EAAkD,MAAlD;AAEAF,IAAAA,OAAO,CAACE,MAAR,CAAe,MAAf,EAAsB,KAAtB;AACAC,IAAAA,KAAK,CAACJ,GAAD,EAAM;AACTC,MAAAA,OAAO,EAACA,OADC;AAETI,MAAAA,MAAM,EAAE,MAFC;AAGTT,MAAAA,IAAI,EAAEU,IAAI,CAACC,SAAL,CAAeX,IAAf;AAHG,KAAN,CAAL,CAKCf,IALD,CAKM2B,QAAQ,IAAI;AAChB9C,MAAAA,OAAO,CAACC,GAAR,CAAY6C,QAAZ;;AACA,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACf;AACAD,QAAAA,QAAQ,CAACE,IAAT,GACC7B,IADD,CACMC,GAAG,IAAG;AACVpB,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAYmB,GAAxB;AACApB,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcmB,GAAG,CAAC6B,SAA9B;AACA,eAAKC,QAAL,CAAc;AACVtB,YAAAA,UAAU,EAAGR;AADH,WAAd;AAGD,SAPD;AASD;AAEA,KApBD;AAsBL;;AACD+B,EAAAA,eAAe,CAAC/C,GAAD,EAAM;AACnB;AACA,QAAIgD,UAAU,GAAC,aAAWhD,GAAG,CAACiD,YAA9B;AACA,QAAIC,UAAJ;AACA,QAAIC,SAAJ;AACA,QAAIC,KAAJ;AAAU,QAAIC,IAAI,GAAC,CAAT,CALS,CAMnB;AACA;;AACA,QAAIC,WAAW,GAAGtD,GAAG,CAAC6C,SAAtB;AACA,QAAIU,KAAK,GAAG,IAAIpE,IAAJ,EAAZ;AACA,QAAIqE,YAAY,GAAGD,KAAK,CAAC/D,QAAN,EAAnB;AACA,QAAIiE,YAAY,GAACF,KAAK,CAACjE,QAAN,KAAiB,CAAlC;AACA,QAAIoE,WAAW,GAACH,KAAK,CAAClE,WAAN,EAAhB;AACA,QAAIsE,WAAW,GAACJ,KAAK,CAAChE,OAAN,EAAhB;AACA,QAAIqE,KAAK,GAAGN,WAAW,CAACO,KAAZ,CAAkB,GAAlB,EAAsB,CAAtB,CAAZ;AACA,QAAIzE,IAAI,GAAGwE,KAAK,CAAC,CAAD,CAAL,CAASC,KAAT,CAAe,GAAf,EAAmB,CAAnB,CAAX;AACA,QAAIC,KAAK,GAAG1E,IAAI,CAAC,CAAD,CAAhB;AACA,QAAI2E,MAAM,GAAG3E,IAAI,CAAC,CAAD,CAAjB;AACA,QAAI4E,GAAG,GAAI5E,IAAI,CAAC,CAAD,CAAf;AACA,QAAI6E,IAAI,GAAGL,KAAK,CAAC,CAAD,CAAL,CAASC,KAAT,CAAe,GAAf,EAAmB,CAAnB,CAAX;AACA,QAAIK,IAAI,GAAGD,IAAI,CAAC,CAAD,CAAf;AACA,QAAIE,KAAK,GAACV,YAAY,GAACM,MAAvB;AACA,QAAIK,KAAK,GAACT,WAAW,GAACK,GAAtB;AACA,QAAIK,KAAK,GAACb,YAAY,GAACU,IAAvB;AAEA,QAAII,IAAI,GAAGd,YAAY,GAACU,IAAxB;AACAtE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBsE,KAAxB;AACAvE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBwE,KAAxB;AACAzE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBuE,KAAtB;;AACA,QAAGpE,GAAG,CAACE,QAAJ,KAAe,MAAlB,EACA;AACE,UAAGiE,KAAK,GAAC,CAAT,EACA;AACEd,QAAAA,IAAI,GAAC,CAAL;AACAvD,QAAAA,KAAK,GAACqE,KAAK,GAAC,SAAZ;AACD,OAJD,MAKK,IAAGC,KAAK,GAAC,CAAT,EAAW;AAAEf,QAAAA,IAAI,GAAC,CAAL;AAAQvD,QAAAA,KAAK,GAACsE,KAAK,GAAC,OAAZ;AAAoB,OAAzC,MAEA;AACLf,QAAAA,IAAI,GAAC,CAAL;AAAQvD,QAAAA,KAAK,GAACuE,KAAK,GAAC,QAAZ;AAAqB;AAC9B;;AACD,QAAGrE,GAAG,CAACE,QAAJ,KAAe,aAAlB,EACA;AACE,UAAGiE,KAAK,GAAC,CAAT,EACA;AACEd,QAAAA,IAAI,GAAC,CAAL;AACAvD,QAAAA,KAAK,GAACqE,KAAK,GAAC,SAAZ;AACD,OAJD,MAKG,IAAGC,KAAK,IAAE,CAAV,EAAY;AACff,QAAAA,IAAI,GAAC,CAAL;AAAOvD,QAAAA,KAAK,GAACsE,KAAK,GAAC,OAAZ;AAAoB,OADxB,MAEE,IAAGC,KAAK,GAAC,CAAT,EAAW;AAChBhB,QAAAA,IAAI,GAAC,CAAL;AAAOvD,QAAAA,KAAK,GAACuE,KAAK,GAAC,QAAZ;AAAqB,OADvB,MAED;AACJhB,QAAAA,IAAI,GAAC,CAAL;AAAOvD,QAAAA,KAAK,GAACuE,KAAK,GAAC,QAAZ;AAAqB;AAC7B,KAtDkB,CAuDnB;AACA;AACA;AACA;AACE;;;AAEF,QAAGrE,GAAG,CAACuE,MAAJ,IAAY,SAAf,EAAyB;AACvBpB,MAAAA,SAAS,GAAGnD,GAAG,CAACwE,WAAhB;AACAtB,MAAAA,UAAU,GAAG,gBAAb;;AACA,UAAGG,IAAI,KAAG,CAAV,EAAY;AACbD,QAAAA,KAAK,GAAE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACL,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAwBtD,KAAxB,CADK,EAEL,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK;AAAQ,UAAA,OAAO,EAAE2E,KAAK,IAC1B;AACE1E,YAAAA,SAAS,CAACC,GAAD,CAAT;AACF,WAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAL,CAFK,CAAP;AAOG,OARF,MAUF;AACEoD,QAAAA,KAAK,GAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAActD,KAAd,CAAL,CAAN;AACD;AACA,KAhBD,MAiBI;AACF,UAAI4E,GAAG,GAAG,aAAW1E,GAAG,CAACwE,WAAzB;AACArB,MAAAA,SAAS,GAAC;AAAK,QAAA,GAAG,EAAEuB,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACAxB,MAAAA,UAAU,GAAGlD,GAAG,CAAC2E,QAAjB;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAY3E,GAAG,CAACK,GAAhB,CADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqBL,GAAG,CAAC6C,SAAzB,CAFF,CADF,EAMC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAqB;AAAK,MAAA,GAAG,EAAEG,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,CADH,CAND,EAUA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBhD,GAAG,CAAC4E,kBAAtB,CADI,CAVA,EAaGxB,KAbH,CADF,CADF;AAmBD;;AAEDyB,EAAAA,eAAe,CAAC7E,GAAD,EAAM;AACjB,WAAO,IAAP;AACH;;AAEC8E,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEY;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAJ,CAAxB,CADJ,EAEV,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAG,KAAKvD,KAAL,CAAWC,UAAlC;AAA+C,MAAA,eAAe,EAAG,KAAKuB,eAAtE;AAAwF,MAAA,aAAa,EAAG,KAAK8B,eAA7G;AAA+H,MAAA,OAAO,MAAtI;AAAuI,MAAA,KAAK,MAA5I;AAA6I,MAAA,SAAS,MAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAC,KAA7B;AAAmC,MAAA,UAAU,EAAE,KAAKpD,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEC,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAC,KAAzB;AAA+B,MAAA,SAAS,EAAC,KAAzC;AAA+C,MAAA,KAAK,MAApD;AAAqD,MAAA,MAAM,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFD,EAGA,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAC,KAAzB;AAAgC,MAAA,UAAU,EAAE,KAAKsD,aAAjD;AAAgE,MAAA,SAAS,EAAC,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,EAIA,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAC,KAAzB;AAA+B,MAAA,SAAS,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJA,EAKA,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAC,KAAzB;AAA+B,MAAA,SAAS,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,EAMA,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAC,KAAzB;AAA+B,MAAA,SAAS,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANA,EAOA,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAC,KAAzB;AAA+B,MAAA,SAAS,EAAC,oBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPA,EAQA,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAC,KAAzB;AAA+B,MAAA,SAAS,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA,CAFU,CAFZ,EAgBA;AAAU,MAAA,IAAI,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAEN,KAAK,IAAE;AAAC7D,QAAAA,MAAM,CAACoE,QAAP,CAAgBC,IAAhB,GAAqB,YAArB;AAAkC,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6E;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7E,CAhBA,CADF;AAsBD;;AA3M0B;;AA6M/B,eAAevG,UAAU,CAAC0C,OAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { useHistory, withRouter,Link } from \"react-router-dom\";\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport {Container,Row,Col} from 'react-bootstrap';\nfunction CurDateTime() {\n  var tempDate = new Date();\n var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() +' '+ tempDate.getHours()+':'+ tempDate.getMinutes()+':'+ tempDate.getSeconds();\n  const currDate = \"Current Date= \"+date;\n  console.log(\"tempdate\",tempDate);\n  console.log(currDate);\n  return (\n    // <p>{currDate}</p>\n    date\n  );\n}\nvar print;\nfunction sendAlert(row)\n{  var EMAIL;\n  if(row.Category==\"Electricity\"){\n    //  EMAIL = \"meghana.honey44@gmail.com\"}\n    EMAIL=\"himajareddy2016@gmail.com\"}\n  if(row.Category==\"Road\"){\n   EMAIL=\"himajareddy2016@gmail.com\"}\n   if(row.Category==\"Water\")\n   {\n     EMAIL=\"pavanisiddam2k@gmail.com\"\n   }\n    const templateId = 'template_NgHqYVXi';\n    const EMAILMESSAGE= \"The Complaint with Id:\"+row.Cid+\" is delayed by \"+print+\" Please Take immediate action.\"\n    sendFeedback(templateId, {message_html: EMAILMESSAGE, from_name: \"CITIZENS ENGAGE ADMIN\", email: EMAIL})\n    alert(\"Alert Send successfully\");\n    }\n\nfunction sendFeedback (templateId, variables) {\n  window.emailjs.send(\n    'gmail', templateId,\n    variables\n    ).then(res => {\n      console.log('Email successfully sent!')\n    })\n    // Handle errors here however you like, or use a React error boundary\n    .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n  }\n\nclass Pending extends Component{\n  constructor(props) {\n    super(props);\n   \n    this.state={\n      complaints :[]\n    }\n}\nindexN(cell, row, enumObject, index) {\n  return (<div>{index+1}</div>) \n}\n// CellFormatter(cell,row){\n//   var createdtime = row.CreatedAt;\n//   var pdate = new Date();\n//   var presenthours = pdate.getHours();\n//   var total = createdtime.split(\" \",2);\n//   var date = total[0].split(\"-\",3);\n//   var years = date[0];\n//   var months = date[1];\n//   var day =  date[2];\n//   var time = total[1].split(\":\",3)\n//   var hour = time[1];\n//   var diff = presenthours-hour;\n//   console.log(\"difference in cekl\",diff);\n//   return(\n//   <div>\n//     if(diff>3){\n//       <h1 style=\"color:red\"> </h1>\n//     }\n//   </div>\n//   )\n// }\ncomponentDidMount(){\n  var body = {\n    name: sessionStorage.getItem(\"cat\")\n  }\n  console.log(\"Body\"+body.name);\n\n      const url = \"http://localhost:9000/statusPendingComplaints\";\n        let headers = new Headers();\n    \n        headers.append('Content-Type','application/json');\n        headers.append('Accept','application/json');\n    \n        headers.append('Access-Control-Allow-origin',url);\n        headers.append('Access-Control-Allow-Credentials','true');\n    \n        headers.append('POST','GET');\n        fetch(url, {\n          headers:headers,\n          method: 'POST',\n          body: JSON.stringify(body)\n        })\n        .then(response => {\n          console.log(response)\n          if(response.ok){\n          // UserProfile.setEmail(this.state.email);\n          response.json()\n          .then(res=> {\n            console.log(\"Response:\"+res)\n            console.log(\"complaints:\"+res.CreatedAt)\n            this.setState({\n                complaints : res\n            })    \n          })\n         \n        }\n        \n        })\n           \n  } \n  expandComponent(row) {\n    // var route= \"/viewandclose/\"+row.Cid;\n    var createdimg=\"/images/\"+row.CreatedImage;\n    var closedtime;\n    var closedimg;\n    var image;var flag=1;\n    // var creat=row.CreatedAt;\n    // var diff=creat-CurDateTime()\n    var createdtime = row.CreatedAt;\n    var pdate = new Date();\n    var presenthours = pdate.getHours();\n    var presentMonth=pdate.getMonth()+1;\n    var presentYear=pdate.getFullYear();\n    var presentDate=pdate.getDate();\n    var total = createdtime.split(\" \",2);\n    var date = total[0].split(\"-\",3);\n    var years = date[0];\n    var months = date[1];\n    var day =  date[2];\n    var time = total[1].split(\":\",3)\n    var hour = time[0];\n    var diffm=presentMonth-months;\n    var diffd=presentDate-day;\n    var diffh=presenthours-hour;\n    \n    var diff = presenthours-hour;\n    console.log(\"diffmontg\",diffm);\n    console.log(\"diffhours\",diffh);\n    console.log(\"diffday\",diffd);\n    if(row.Category==='Road')\n    {\n      if(diffm>1)\n      {\n        flag=0;\n        print=diffm+\" Months\";\n      }\n      else if(diffd>4){ flag=0; print=diffd+\" Days\"}\n     \n      else {\n      flag=1; print=diffh+\" Hours\"}\n    }\n    if(row.Category==='Electricity')\n    {\n      if(diffm>1)\n      {\n        flag=0;\n        print=diffm+\" Months\";\n      }\n    else if(diffd>=1){\n      flag=0;print=diffd+\" Days\"}\n      else if(diffh>3){\n      flag=0;print=diffh+\" Hours\"}\n      else{\n      flag=1;print=diffh+\" Hours\"}\n    }\n    // if(creat-CurDateTime()>1)\n    //    diff='RedAlert';\n    //   else\n    //   diff='BlueAlert'\n      //console.log(\"difference\",diff);\n\n    if(row.Status==\"Pending\"){\n      closedimg = row.ClosedImage;\n      closedtime = \"Not Yet Closed\";\n      if(flag===0){\n     image= <Row>\n       <Col>It is Delayed by :{print}</Col>\n       <Col><button onClick={event =>  \n        {\n          sendAlert(row);\n       }}>Send an Alert</button></Col>\n       \n </Row>}\n    else\n    {\n      image=<Row><Col>Diff is:{print}</Col></Row>\n    }\n    }\n    else{\n      var img = \"/images/\"+row.ClosedImage;\n      closedimg=<img src={img}/>;\n      closedtime = row.ClosedAt;\n    }\n    return (\n      <div>\n        <Container border=\"5px\">\n          <Row>\n            <Col>Cid : {row.Cid}</Col>\n            <Col>Created Time : {row.CreatedAt}</Col>\n            {/* <Col>Closed Time : {closedtime}</Col> */}\n          </Row>\n         <Row>\n            <Col>Problem Image : <img src={createdimg}/></Col>\n    {/* <Col>Solved Image :{closedimg}</Col> */}\n        </Row>\n        <Row>\n    <Col>Description:{row.CreatedDescription}</Col>\n    {/* <Col>Description:{row.ClosedDescription}</Col> */}\n    </Row>{image}\n</Container>\n      </div>\n    );\n  }\n\n  isExpandableRow(row) {    \n      return true;      \n  }\n  \n    render() {\n        \n      return (\n        <div>\n            \n                    <div className=\"main_content\">\n                        <div className=\"header\"><h2><u>Pending Complaints</u></h2></div>\n          <BootstrapTable data={ this.state.complaints } expandComponent={ this.expandComponent } expandableRow={ this.isExpandableRow } striped hover condensed>\n          <TableHeaderColumn dataField=\"any\" dataFormat={this.indexN} >S.No</TableHeaderColumn>\n           <TableHeaderColumn width='150' dataField='Cid' isKey hidden>CID</TableHeaderColumn> \n          <TableHeaderColumn width='150'  dataformat={this.CellFormatter} dataField='Category'>CATEGORY</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='CreatedImage'>IMAGE</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='Location'>LOCATION</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='CreatedAt'>TIMESTAMP</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='CreatedDescription'>DESCRIPTION</TableHeaderColumn>\n          <TableHeaderColumn width='150' dataField='Status'>STATUS</TableHeaderColumn>\n          \n      </BootstrapTable>\n        </div>\n        <button   name=\"logout\" onClick={event=>{window.location.href=\"/Authority\"}}><span class=\"logout\">Back</span></button>\n        </div>\n  \n\n        );\n    }\n}\nexport default withRouter(Pending);"]},"metadata":{},"sourceType":"module"}